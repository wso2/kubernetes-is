
apiVersion: apps/v1
kind: Deployment
metadata:
  name: wso2is-deployment
  namespace : wso2
spec:
  replicas: 1
  minReadySeconds: 30
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  selector:
    matchLabels:
      deployment: wso2is
      app: wso2is
      monitoring: jmx
      pod: wso2is
  template:
    metadata:
      labels:
        deployment: wso2is
        app: wso2is
        monitoring: jmx
        pod: wso2is
    spec:
      hostAliases:
        - ip: "127.0.0.1"
          hostnames:
            - "wso2is"
      initContainers:
      - name: init-is-db
        image: busybox:1.31
        command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z wso2is-rdbms-service-mysql 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
      - name: init-mysql-connector-download
        image: busybox:1.32
        command:
          - /bin/sh
          - "-c"
          - |
            set -e
            connector_version=8.0.17
            wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /mysql-connector-jar/
        volumeMounts:
          - name: mysql-connector-jar
            mountPath: /mysql-connector-jar
      containers:
      - name: wso2is
        image: "$image.pull.@.wso2"/wso2is:"$image.tag.wso2is"
        livenessProbe:
          exec:
            command:
            - /bin/sh
            - -c
            - nc -z localhost 9443
          initialDelaySeconds: 250
          periodSeconds: 10
        readinessProbe:
          exec:
            command:
              - /bin/sh
              - -c
              - nc -z localhost 9443
          initialDelaySeconds: 250
          periodSeconds: 10
        imagePullPolicy: Always
        resources:
          requests:
            memory: "2Gi"
            cpu: "2000m"
          limits:
            memory: "4Gi"
            cpu: "4000m"
        lifecycle:
          preStop:
            exec:
              command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
        securityContext:
          runAsUser: 802
        env:
          - name: NODE_IP
            valueFrom:
              fieldRef:
                fieldPath: status.podIP
          - name: HOST_NAME
            value: wso2is
        ports:
        - containerPort: 9763
          protocol: TCP
        - containerPort: 9443
          protocol: TCP
        volumeMounts:
        - name: identity-server-conf
          mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
          subPath: deployment.toml
        - name: mysql-connector-jar
          mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/dropins
      serviceAccountName: "wso2svc-account"
      imagePullSecrets:
        - name: wso2is-deployment-creds
      volumes:
      - name: identity-server-conf
        configMap:
          name: identity-server-conf
      - name: mysql-connector-jar
        emptyDir: {}
---
