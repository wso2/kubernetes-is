# Copyright (c) 2018, WSO2 Inc. (http://www.wso2.org) All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
# http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ template "is-pattern-1.resource.prefix" . }}-identity-server-statefulset
  namespace: {{ .Release.Namespace }}
spec:
  selector:
    matchLabels:
      deployment: wso2is
      monitoring: {{ .Values.wso2.monitoring.prometheus.jmxJobName }}
  replicas: {{ .Values.wso2.deployment.wso2is.replicas }}
  serviceName: {{ template "is-pattern-1.resource.prefix" . }}-identity-service
  template:
    metadata:
      annotations:
        checksum.is.bin: {{ include (print $.Template.BasePath "/is/wso2is-pattern-1-identity-server-bin.yaml") . | sha256sum }}
        checksum.is.conf: {{ include (print $.Template.BasePath "/is/wso2is-pattern-1-identity-server-conf.yaml") . | sha256sum }}
        {{ if .Values.wso2.centralizedLogging.enabled }}
        checksum.is.log.conf: {{ include (print $.Template.BasePath "/logstash/wso2is-pattern-1-c4-logstash-conf.yaml") . | sha256sum }}
        {{ end }}
      labels:
        deployment: wso2is
        monitoring: {{ .Values.wso2.monitoring.prometheus.jmxJobName }}
    spec:
      initContainers:
        {{ if .Values.wso2.deployment.dependencies.mysql }}
        - name: init-is-db
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of MySQL Server deployment"; while ! nc -z wso2is-mysql-db-service 3306; do sleep 1; printf "-"; done; echo -e "  >> MySQL Server has started";']
        - name: init-mysql-connector-download
          image: busybox:1.32
          command:
            - /bin/sh
            - "-c"
            - |
              set -e
              connector_version=8.0.17
              wget https://repo1.maven.org/maven2/mysql/mysql-connector-java/${connector_version}/mysql-connector-java-${connector_version}.jar -P /mysql-connector-jar/
          volumeMounts:
            - name: mysql-connector-jar
              mountPath: /mysql-connector-jar
        {{ end }}
        {{ if .Values.wso2.centralizedLogging.enabled }}
        - name: init-elasticsearch
          image: busybox:1.31
          command: ['sh', '-c', 'echo -e "Checking for the availability of ElasticSearch Server deployment"; while ! nc -z {{ .Values.wso2.centralizedLogging.logstash.elasticsearch.host }} 9200; do sleep 1; printf "-"; done; echo -e "  >> Elasticsearch server has started";']
        {{ end }}
        {{ if .Values.wso2.monitoring.enabled }}
        - name: init-jmx-exporter
          image: busybox:1.31
          command:
            - /bin/sh
            - "-c"
            - |
              set -e
              wget https://repo1.maven.org/maven2/io/prometheus/jmx/jmx_prometheus_javaagent/0.12.0/jmx_prometheus_javaagent-0.12.0.jar -P /jmx-jar/
          volumeMounts:
            - name: shared-prometheus-jmx-jar
              mountPath: /jmx-jar
        {{ end }}
      containers:
        - name: identity-server
{{- include "image" (dict "Values" .Values "deployment" .Values.wso2.deployment.wso2is) | indent 10 }}
          imagePullPolicy: {{ .Values.wso2.deployment.wso2is.imagePullPolicy }}
          env:
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: JVM_MEM_OPTS
              value: "-Xms{{ .Values.wso2.deployment.wso2is.resources.jvm.heap.memory.xms }} -Xmx{{ .Values.wso2.deployment.wso2is.resources.jvm.heap.memory.xmx }}"
          startupProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - nc -z localhost 9443
            initialDelaySeconds: {{ .Values.wso2.deployment.wso2is.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.wso2is.startupProbe.periodSeconds }}
            failureThreshold: {{ .Values.wso2.deployment.wso2is.startupProbe.failureThreshold }}
          livenessProbe:
            httpGet:
              path: /carbon/admin/login.jsp
              port: 9443
              scheme: HTTPS
            periodSeconds: {{ .Values.wso2.deployment.wso2is.livenessProbe.periodSeconds }}
          readinessProbe:
            httpGet:
              path: /api/health-check/v1.0/health
              port: 9443
              scheme: HTTPS
            initialDelaySeconds: {{ .Values.wso2.deployment.wso2is.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.wso2.deployment.wso2is.readinessProbe.periodSeconds }}
          lifecycle:
            preStop:
              exec:
                command:  ['sh', '-c', '${WSO2_SERVER_HOME}/bin/wso2server.sh stop']
          resources:
            requests:
              memory: {{ .Values.wso2.deployment.wso2is.resources.requests.memory }}
              cpu: {{ .Values.wso2.deployment.wso2is.resources.requests.cpu }}
            limits:
              memory: {{ .Values.wso2.deployment.wso2is.resources.limits.memory }}
              cpu: {{ .Values.wso2.deployment.wso2is.resources.limits.cpu }}
          securityContext:
            runAsUser: 802
          ports:
            - containerPort: 9763
              protocol: TCP
            - containerPort: 9443
              protocol: TCP
            {{ if .Values.wso2.monitoring.enabled }}
            - containerPort: 2222
              protocol: TCP
              name: metrics
            {{ end }}
          volumeMounts:
            - name: identity-server-conf
              mountPath: /home/wso2carbon/wso2-config-volume/repository/conf/deployment.toml
              subPath: deployment.toml
            - name: identity-server-bin
              mountPath: /home/wso2carbon/wso2-config-volume/bin
            {{ if .Values.wso2.deployment.dependencies.mysql }}
            - name: mysql-connector-jar
              mountPath: /home/wso2carbon/wso2-artifact-volume/repository/components/dropins
            {{ end }}
            {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.sharedArtifacts.enabled }}
            - name: identity-server-volume-claim-tenants-storage
              mountPath: /home/wso2carbon/wso2is-5.11.0/repository/tenants
            - name: identity-server-volume-claim-userstores-storage
              mountPath: /home/wso2carbon/wso2is-5.11.0/repository/deployment/server/userstores
            {{ end }}
            {{ if .Values.wso2.monitoring.enabled }}
            - name: shared-prometheus-jmx-jar
              mountPath: /home/wso2carbon/prometheus
            - name: identity-server-prometheus-exporter-conf
              mountPath: /home/wso2carbon/prometheus/config.yaml
              subPath: config.yaml
            {{ end }}
        {{ if .Values.wso2.centralizedLogging.enabled }}
            - name: shared-logs
              mountPath: /home/wso2carbon/wso2is-5.11.0/repository/logs/
        - name: wso2is-logstash
          image: docker.elastic.co/logstash/logstash:{{ .Values.wso2.centralizedLogging.logstash.imageTag }}
          volumeMounts:
            - name: shared-logs
              mountPath: /usr/share/logstash/wso2-logs/
            - name: logstash-yml
              mountPath: /usr/share/logstash/config/logstash.yml
              subPath: logstash.yml
            - name: c4-logstash-conf
              mountPath: /usr/share/logstash/pipeline/logstash.conf
              subPath: logstash.conf
            - name: shared-plugins
              mountPath: /usr/share/logstash/plugins/
          env:
            - name: NODE_ID
              value: {{ .Release.Name }}-is-node
            - name: NODE_IP
              valueFrom:
                fieldRef:
                  fieldPath: status.podIP
            - name: ELASTICSEARCH_USERNAME
              valueFrom:
                secretKeyRef:
                  name: {{ template "is-pattern-1.resource.prefix" . }}-logstash-elasticsearch-creds
                  key: username
            - name: ELASTICSEARCH_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ template "is-pattern-1.resource.prefix" . }}-logstash-elasticsearch-creds
                  key: password
            - name: ELASTICSEARCH_HOST
              value: {{ .Values.wso2.centralizedLogging.logstash.elasticsearch.host }}
        {{ end }}
      serviceAccountName: {{ .Values.kubernetes.serviceAccount }}
      {{- if .Values.wso2.deployment.wso2is.imagePullSecrets }}
      imagePullSecrets:
        - name: {{ .Values.wso2.deployment.wso2is.imagePullSecrets }}
      {{- else if and (not (eq .Values.wso2.subscription.username "")) (not (eq .Values.wso2.subscription.password "")) }}
      imagePullSecrets:
        - name: {{ template "is-pattern-1.resource.prefix" . }}-wso2-private-registry-creds
      {{ end }}
      volumes:
      - name: identity-server-conf
        configMap:
          name: {{ template "is-pattern-1.resource.prefix" . }}-identity-server-conf
      - name: identity-server-bin
        configMap:
          name: {{ template "is-pattern-1.resource.prefix" . }}-identity-server-bin
      {{ if .Values.wso2.deployment.persistentRuntimeArtifacts.sharedArtifacts.enabled }}
      - name: identity-server-volume-claim-tenants-storage
        persistentVolumeClaim:
          claimName: {{ template "is-pattern-1.resource.prefix" . }}-identity-server-shared-tenants-volume-claim
      - name: identity-server-volume-claim-userstores-storage
        persistentVolumeClaim:
          claimName: {{ template "is-pattern-1.resource.prefix" . }}-identity-server-shared-userstores-volume-claim
      {{ end }}
      {{ if .Values.wso2.centralizedLogging.enabled }}
      - name: shared-logs
        emptyDir: {}
      - name: logstash-yml
        configMap:
          name: {{ template "is-pattern-1.resource.prefix" . }}-logstash-yml-conf
      - name: c4-logstash-conf
        configMap:
          name: {{ template "is-pattern-1.resource.prefix" . }}-c4-logstash-conf
      - name: shared-plugins
        emptyDir: {}
      {{ end }}
      {{ if .Values.wso2.monitoring.enabled }}
      - name: shared-prometheus-jmx-jar
        emptyDir: {}
      - name: identity-server-prometheus-exporter-conf
        configMap:
          name: {{ template "is-pattern-1.resource.prefix" . }}-identity-server-conf-prometheus-exporter
      {{ end }}
      {{ if .Values.wso2.deployment.dependencies.mysql }}
      - name: mysql-connector-jar
        emptyDir: {}
      {{ end }}
